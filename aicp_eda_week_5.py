# -*- coding: utf-8 -*-
"""AICP_EDA_Week_5

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FsJSoHpsrgIxevQ_QWRhpB-aDWs-wyZL

Importing libraries
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import WordCloud
from collections import Counter

"""Task 1"""

file = pd.read_csv('/content/Instagram data.csv', encoding= 'ISO-8859-1')


print(file.columns)
print('---------------------------------------')
print(file.info)

"""Task 2"""

#descriptive analysis

print(file.describe)

"""Task 3"""

#checking for null values

print(file.isna().sum())

"""Task 4"""

reach = 'Impressions'

data = file[reach].dropna()

plt.hist(data, bins=20, color='skyblue', edgecolor='black')

plt.xlabel('Impressions')
plt.ylabel('Count')
plt.title('Instagram Posts Reach')

plt.show()

"""Task 5"""

impressions = file['Impressions']
index = file.index

plt.plot(index, impressions)


plt.xlabel('Index')
plt.ylabel('Impressions')

plt.title('Impressions Over Time')

plt.show()

"""Task 6"""

likes = file['Likes']
saves = file['Saves']
follows = file['Follows']

index = file.index

plt.plot(index, likes, label='Likes')
plt.plot(index, saves, label='Saves')
plt.plot(index, follows, label='Follows')


plt.xlabel('Index')
plt.ylabel('Count')

plt.title('Metrics Over Time')
plt.legend()

plt.show()

"""Task 7"""

columns = ['From Home', 'From Explore', 'From Hashtags', 'From Other']

count = file[columns].sum()

plt.pie(count, labels=count.index, autopct='%1.1f%%', startangle=140)

plt.axis('equal')


plt.title('Pie Chart Example')
plt.legend()

plt.show()

"""Task 8"""

columns = ['Likes', 'Shares', 'Saves', 'Comments']

count = file[columns].sum()

plt.pie(count, labels=count.index, autopct='%1.1f%%', startangle=140)

plt.axis('equal')


plt.title('Pie Chart Example')
plt.legend()

plt.show()

"""Task 9"""

x = file['Profile Visits']
y = file['Follows']

sns.regplot(x=x, y=y)

plt.title('Profile Visits vs. Follows')

plt.show()

"""Task 10"""

hashtags = file['Hashtags']

text = ' '.join(hashtags.str.replace('#', ''))

wordcloud = WordCloud(width=800, height=400, background_color='black').generate(text)

plt.figure(figsize=(10, 5))
plt.imshow(wordcloud, interpolation='bilinear')
plt.title('Hastags Word Cloud')
plt.show()

"""Task 11"""

corr_matrix = file.corr()

plt.figure(figsize=(10, 8))
sns.heatmap(corr_matrix, annot=True, cmap='plasma', fmt=".2f")
plt.title('Correlation Matrix')
plt.show()

"""Task 12"""

all_hashtags = file['Hashtags'].str.split()

all_hashtags_flat = [item for sublist in all_hashtags for item in sublist]
hashtags_count = Counter(all_hashtags_flat)

hashtags_df = pd.DataFrame.from_dict(hashtags_count, orient='index', columns=['Count'])

# Plotting the bar chart
plt.figure(figsize=(10, 1000))
hashtags_df.sort_values(by='Count', ascending=False).plot(kind='bar')
plt.title('Count of Each Hashtag')
plt.xlabel('Hashtag')
plt.ylabel('Count')
plt.show()

"""Task 13"""

all_hashtags = file['Hashtags'].str.split()
all_hashtags_flat = [item for sublist in all_hashtags for item in sublist]
hashtags_count = Counter(all_hashtags_flat)

N = 20

top_hashtags = dict(hashtags_count.most_common(N))

hashtags_df = pd.DataFrame.from_dict(top_hashtags, orient='index', columns=['Count'])

plt.figure(figsize=(10, 6))
hashtags_df.sort_values(by='Count', ascending=True).plot(kind='bar', legend=None)
plt.title('Top 10 Hashtags')
plt.xlabel('Hashtag')
plt.ylabel('')
plt.show()

hashtags = file['Hashtags'].head(20)
likes = file['Likes'].head(20)

plt.figure(figsize=(10, 6))
plt.bar(hashtags, likes)
plt.title('Likes for Each Hashtag')
plt.xlabel('Hashtag')
plt.ylabel('Likes')
plt.xticks(rotation=90)
plt.show()

"""Task 14

# Observation

Hashtags like 'amankharwal' and 'covid' had the highest number of impressions and likes
"""





